buildscript {
    repositories {
        jcenter()
        google()
        maven {
            url 'https://maven.fabric.io/public'
        }
    }
    dependencies {
        classpath 'com.android.tools.build:gradle:3.2.1'
        classpath 'com.google.protobuf:protobuf-gradle-plugin:0.8.6'
        classpath 'com.google.gms:google-services:4.0.2' // google-services plugin
        classpath 'io.fabric.tools:gradle:1.26.1'
        classpath 'com.google.firebase:firebase-plugins:1.1.5'
    }
}

allprojects {
    repositories {
        jcenter()
        google()
    }
}

apply plugin: 'com.android.application'
apply plugin: 'com.google.firebase.firebase-perf'
apply plugin: 'com.google.protobuf'
apply plugin: 'io.fabric'

// Load keystore
def keystorePropertiesFile = rootProject.file("../../../vendor/keys/keystore.properties")
def keystoreProperties = new Properties()
keystoreProperties.load(new FileInputStream(keystorePropertiesFile))


// Define versions in a single place
ext {
    // Sdk and tools
    compileSdkVersion = 28
    buildToolsVersion = '28.0.3'

    minSdkVersion = 24
    targetSdkVersion = 28

    // App dependencies
    supportLibraryVersion = '28.0.0'
    firebaseVersion = '16.0.6'
    firebasePerfVersion = '16.2.3'
    crashlyticsVersion = '2.9.8'
    threetenabpVersion = '1.1.1'
    junitVersion = '4.12'
    mockitoVersion = '1.10.19'
}

android {
    compileSdkVersion rootProject.compileSdkVersion
    buildToolsVersion rootProject.buildToolsVersion

    defaultConfig {
        minSdkVersion rootProject.minSdkVersion
        targetSdkVersion rootProject.targetSdkVersion
        versionCode 24
        versionName "3.1.1"

        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
        project.ext.set("archivesBaseName", "KatsunaLauncher-" + defaultConfig.versionName)

        vectorDrawables.useSupportLibrary = true
    }

    signingConfigs {
        katsunaConfig {
            storeFile rootProject.file("../../../vendor/keys/katsuna.keystore")
            storePassword keystoreProperties['storePassword']
            keyAlias keystoreProperties['keyAlias']
            keyPassword keystoreProperties['keyPassword']
        }
    }

    buildTypes {
        debug {
            // Disable fabric build ID generation for debug builds
            ext.enableCrashlytics = false

            minifyEnabled false
            testCoverageEnabled = true
        }

        release {
            signingConfig signingConfigs.katsunaConfig

            lintOptions {
                checkReleaseBuilds false
            }
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    testOptions {
        unitTests.returnDefaultValues = true
    }

    flavorDimensions "default"

    productFlavors {
        aosp {
            dimension "default"
            applicationId 'com.katsuna.launcher'
            testApplicationId 'com.katsuna.launcher.tests'
        }
    }

    sourceSets {
        main {
            res.srcDirs = ['res']
            java.srcDirs = ['src']
            manifest.srcFile 'AndroidManifest-common.xml'
            proto {
                srcDir 'protos/'
                srcDir 'proto_overrides/'
            }
            assets.srcDirs = ['assets', 'assets']
        }

        test {
            java.srcDirs = [ 'unit_tests/src']
        }

        androidTest {
            res.srcDirs = ['tests/res']
            java.srcDirs = ['tests/src']
            manifest.srcFile "tests/AndroidManifest-common.xml"
        }

        androidTestDebug {
            manifest.srcFile "tests/AndroidManifest.xml"
        }

        aosp {
            java.srcDirs = ['src_flags', "src_ui_overrides"]
            manifest.srcFile "AndroidManifest.xml"
        }
    }
}

repositories {
    maven { url "../../../prebuilts/fullsdk-darwin/extras/android/m2repository" }
    maven { url "../../../prebuilts/fullsdk-linux/extras/android/m2repository" }
    mavenCentral()
    google()
}

dependencies {
    implementation project(':commons')
    implementation "com.android.support:support-v4:$supportLibraryVersion"
    implementation "com.android.support:support-dynamic-animation:$supportLibraryVersion"
    implementation "com.android.support:recyclerview-v7:$supportLibraryVersion"
    implementation 'com.google.protobuf.nano:protobuf-javanano:3.0.0-alpha-7'
    implementation "com.android.support:appcompat-v7:$supportLibraryVersion"
    implementation "com.android.support:design:$supportLibraryVersion"
    implementation "com.android.support:cardview-v7:$supportLibraryVersion"
    implementation "com.android.support:support-v13:$supportLibraryVersion"
    implementation 'com.facebook.android:audience-network-sdk:4.26.1'
    implementation 'konifar:fab-transformation:1.0.0'
    implementation "com.google.firebase:firebase-core:$firebaseVersion"
    implementation "com.google.firebase:firebase-perf:$firebasePerfVersion"
    implementation "com.crashlytics.sdk.android:crashlytics:$crashlyticsVersion"
    implementation 'com.jakewharton.timber:timber:4.7.1'
    implementation "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"

    // Dependencies for unit tests
    testImplementation "junit:junit:$junitVersion"
    testImplementation "org.mockito:mockito-core:$mockitoVersion"
    testImplementation('org.threeten:threetenbp:1.3.6') {
        exclude module: "com.jakewharton.threetenabp:threetenabp:$threetenabpVersion"
    }

    // Dependencies for integration tests
    androidTestImplementation "org.mockito:mockito-core:1.9.5"
    androidTestImplementation 'com.google.dexmaker:dexmaker:1.2'
    androidTestImplementation 'com.google.dexmaker:dexmaker-mockito:1.2'
    androidTestImplementation 'com.android.support.test:runner:1.0.0'
    androidTestImplementation 'com.android.support.test:rules:1.0.0'
    androidTestImplementation 'com.android.support.test.uiautomator:uiautomator-v18:2.1.2'
    androidTestImplementation "com.android.support:support-annotations:$supportLibraryVersion"
}

protobuf {
    // Configure the protoc executable
    protoc {
        artifact = 'com.google.protobuf:protoc:3.0.0-alpha-3'

        generateProtoTasks {
            all().each { task ->
                task.builtins {
                    remove java
                    javanano {
                        option "java_package=launcher_log_extension.proto|com.katsuna.launcher.userevent.nano"
                        option "java_package=launcher_log.proto|com.katsuna.launcher.userevent.nano"
                        option "java_package=launcher_dump.proto|com.katsuna.launcher.model.nano"
                        option "enum_style=java"
                    }
                }
            }
        }
    }
}

apply plugin: 'com.google.gms.google-services'